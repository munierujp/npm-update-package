import { LogLevel } from '../logger'
import { PackageManagerName } from '../package-manager'
import type { CLIOption } from './CLIOption'

export const cliOptions: CLIOption[] = [
  {
    name: 'branch-name',
    description: 'Branch name template',
    required: false,
    default: 'npm-update-package/{{{packageName}}}/v{{newVersion}}'
  },
  {
    name: 'commit-message',
    description: 'Commit message template',
    required: false,
    default: 'chore(deps): {{updateType}} update {{{packageName}}} to v{{newVersion}}'
  },
  {
    name: 'github-token',
    description: 'GitHub token',
    required: true
  },
  {
    name: 'log-level',
    description: 'Log level to show',
    required: false,
    choices: [
      LogLevel.Off,
      LogLevel.Error,
      LogLevel.Info,
      LogLevel.Debug
    ],
    default: LogLevel.Info
  },
  {
    name: 'package-manager',
    description: 'Package manager of your project',
    required: false,
    choices: [
      PackageManagerName.Npm,
      PackageManagerName.Yarn
    ],
    default: PackageManagerName.Npm
  },
  {
    name: 'pull-request-body',
    description: 'Pull request body template',
    required: false,
    default: `This PR updates these packages:

|package|type|current version|new version|
|---|---|---|---|
|[{{{packageName}}}](https://www.npmjs.com/package/{{{packageName}}})|{{updateType}}|\`{{currentVersion}}\`|\`{{newVersion}}\`|

---
This PR has been generated by [{{{appName}}}]({{{appWeb}}}) v{{appVersion}}`
  },
  {
    name: 'pull-request-title',
    description: 'Pull request title template',
    required: false,
    default: 'chore(deps): {{updateType}} update {{{packageName}}} to v{{newVersion}}'
  }
]
